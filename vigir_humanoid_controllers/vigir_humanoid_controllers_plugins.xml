<library path="lib/libvigir_humanoid_controllers">

  <class name="pos_vel_acc_controllers/JointTrajectoryController" 
         type="pos_vel_acc_controllers::JointTrajectoryController" 
         base_class_type="controller_interface::ControllerBase">
    <description>
      The JointTrajectoryController executes joint-space trajectories on a set of joints.
      This variant represents trajectory segments as quintic splines and sends commands to a position/velocity/acceleration interface.
    </description>
  </class>

  <class name="pos_vel_acc_err_humanoid_controllers/JointTrajectoryController"
         type="pos_vel_acc_err_humanoid_controllers::JointTrajectoryController"
         base_class_type="controller_interface::ControllerBase">
    <description>
      The JointTrajectoryController executes joint-space trajectories on a set of joints.
      This variant represents trajectory segments as quintic splines and sends commands to a position/velocity/acceleration interface.
      Errors are also transmitted.
    </description>
  </class>

  <class name="vigir_humanoid_controllers/PelvisTrajectoryController"
         type="vigir_humanoid_controllers::PelvisTrajectoryController"
         base_class_type="controller_interface::ControllerBase">
    <description>
      The PelvisTrajectoryController executes "joint-space" trajectories on the x,y,z, roll, pitch, yaw of target pelvis pose.
      This variant represents trajectory segments as quintic splines and sends commands to a position command interface.
      Errors are also transmitted.
    </description>
  </class>

  <class name="vigir_humanoid_controllers/VigirGravityCompensationController" 
         type="vigir_humanoid_controllers::VigirGravityCompensationController" 
         base_class_type="controller_interface::ControllerBase">
    <description>
      VigirGravityCompensationController adds the effort required to compensate for gravity (quasi-static) to the full Team ViGIR humanoid controller setup
    </description>
  </class>

  <class name="vigir_humanoid_controllers/VigirInverseDynamicsController" 
         type="vigir_humanoid_controllers::VigirInverseDynamicsController"
         base_class_type="controller_interface::ControllerBase">
    <description>
      VigirInverseDynamicsController adds the effort required to compensate for gravity and dynamics (velocity and acceleration) effects to the full Team ViGIR humanoid controller setup 
    </description>
  </class>

  <class name="vigir_atlas_controllers/AtlasJointImpedanceController" 
         type="vigir_atlas_controllers::AtlasJointImpedanceController"
         base_class_type="controller_interface::ControllerBase">
    <description>
      AtlasJointImppedanceController adds computes effort required to let the joints behave passively with given parameters (stifness and damping) it does its own gravity and dynamics compensation and therefore can't be used together with other controllers
    </description>
  </class>


</library>
